$date
	Thu Jun  8 01:01:34 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 8 ! Output [7:0] $end
$var reg 1 " clk $end
$var reg 1 # init $end
$var reg 8 $ initial_data [7:0] $end
$var reg 1 % rst $end
$scope module block $end
$var wire 8 & Output [7:0] $end
$var wire 1 " clk $end
$var wire 1 # init $end
$var wire 8 ' initial_data [7:0] $end
$var wire 1 % rst $end
$var wire 1 ( tmp11 $end
$var wire 1 ) tmp5 $end
$var wire 1 * tmp8 $end
$var wire 1 + tmp9 $end
$var wire 1 , tmp7 $end
$var wire 1 - tmp6 $end
$var wire 1 . tmp4 $end
$var wire 1 / tmp3 $end
$var wire 1 0 tmp2 $end
$var wire 1 1 tmp19 $end
$var wire 1 2 tmp18 $end
$var wire 1 3 tmp17 $end
$var wire 1 4 tmp16 $end
$var wire 1 5 tmp15 $end
$var wire 1 6 tmp14 $end
$var wire 1 7 tmp13 $end
$var wire 1 8 tmp12 $end
$var wire 1 9 tmp10 $end
$var wire 1 : tmp1 $end
$var wire 8 ; tmp0 [7:0] $end
$var reg 1 < bit0_out $end
$var reg 1 = bit1_out $end
$var reg 1 > bit2_out $end
$var reg 1 ? bit3_out $end
$var reg 1 @ bit4_out $end
$var reg 1 A bit5_out $end
$var reg 1 B bit6_out $end
$var reg 1 C bit7_out $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
b0 ;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
0%
b0 $
0#
0"
b0 !
$end
#5
1"
#10
10
1,
15
11
1:
1-
16
12
0"
b10100101 $
b10100101 '
1#
#15
1(
1)
1C
1A
1>
b10100101 !
b10100101 &
b10100101 ;
1<
1"
#20
1.
17
05
13
01
0"
0#
#25
07
19
00
0(
1*
11
03
15
0C
1B
0A
1@
b1010111 !
b1010111 &
b1010111 ;
1=
1"
#30
0:
0-
06
02
0"
b0 $
b0 '
#35
09
0,
10
0*
0)
01
13
05
0.
1C
0B
1A
0@
1?
b10101110 !
b10101110 &
b10101110 ;
0<
1"
#40
0"
#45
00
11
03
1.
0C
1B
0A
0?
0>
0=
b1000001 !
b1000001 &
b1000001 ;
1<
1"
#50
0"
#55
17
19
10
1(
1*
01
0.
1C
0B
1=
b10000010 !
b10000010 &
b10000010 ;
0<
1"
#60
0"
#65
09
00
0*
15
1.
0C
1@
1?
0=
b11001 !
b11001 &
b11001 ;
1<
1"
#70
0"
#75
07
1,
13
0(
1)
0.
1A
0?
1=
b110010 !
b110010 &
b110010 ;
0<
1"
#80
0"
#85
19
0,
11
05
1*
0)
1B
0@
1>
b1100100 !
b1100100 &
b1100100 ;
0=
1"
#90
0"
#95
1,
10
1)
03
1C
0A
1?
b11001000 !
b11001000 &
b11001000 ;
0>
1"
#100
0"
#105
09
01
0*
1.
0B
1>
b10001101 !
b10001101 &
b10001101 ;
1<
1"
#110
0"
#115
19
00
1*
0C
0?
b111 !
b111 &
b111 ;
1=
1"
#120
10
15
11
1:
1-
16
12
0.
1,
09
0"
b10100101 $
b10100101 '
1#
#125
1(
0*
1C
1A
b10100101 !
b10100101 &
b10100101 ;
0=
1"
#130
0:
0-
06
02
1.
17
05
13
01
0"
b0 $
b0 '
0#
#135
07
19
00
0(
1*
11
03
15
0C
1B
0A
1@
b1010111 !
b1010111 &
b1010111 ;
1=
1"
#140
0"
#145
09
0,
10
0*
0)
01
13
05
0.
1C
0B
1A
0@
1?
b10101110 !
b10101110 &
b10101110 ;
0<
1"
#150
0"
#155
00
11
03
1.
0C
1B
0A
0?
0>
0=
b1000001 !
b1000001 &
b1000001 ;
1<
1"
#160
0"
#165
17
19
10
1(
1*
01
0.
1C
0B
1=
b10000010 !
b10000010 &
b10000010 ;
0<
1"
#170
0"
#175
09
00
0*
15
1.
0C
1@
1?
0=
b11001 !
b11001 &
b11001 ;
1<
1"
#180
0"
#185
07
1,
13
0(
1)
0.
1A
0?
1=
b110010 !
b110010 &
b110010 ;
0<
1"
#190
0"
#195
19
0,
11
05
1*
0)
1B
0@
1>
b1100100 !
b1100100 &
b1100100 ;
0=
1"
#200
0"
#205
1,
10
1)
03
1C
0A
1?
b11001000 !
b11001000 &
b11001000 ;
0>
1"
#210
0"
#215
09
01
0*
1.
0B
1>
b10001101 !
b10001101 &
b10001101 ;
1<
1"
#220
0"
#225
19
00
1*
0C
0?
b111 !
b111 &
b111 ;
1=
1"
#230
0"
#235
17
1(
0.
1?
b1110 !
b1110 &
b1110 ;
0<
1"
#240
0"
